#! /bin/bash

[ "$1" = "-d" ] && set -x
default=$HOME/snapshots

function get_inst {
if [ -e $default/.instances ] 
then	
	printf "$(cat $default/.instances)"
else
	printf "No instance file\nExiting...\n" 1>&2
	exit 1
fi

}

# get all the snapshot files
function get_snaps {

exit
}


function start {
if [ -e $default/.instances -a -s $default/.instances ]
then
	printf "Choose one of the following instances: \n"
	awk -F "@@@" '{ if ( $3 == "none" ) print "\n" NR ")\nName: "$1"\nCommand: "$2" -drive file="$4; else print "\n" NR ")\nName: "$1"\nCommand: "$2" -drive file="$4","$3 }' $default/.instances
	printf "> "; read instance
	if [[ $instance =~ ^[0-9]+$ ]]
	then
		eval $(awk -F "@@@" 'NR == '$instance' { if ( $3 == "none" ) print $2" -drive file="$4; else print $2" -drive file="$4","$3 }' $default/.instances)
	else
		printf "Number was not inputed\nRestarting...\n"
		start
	fi
else
	printf "No instances available\n"
	exit 1
fi
}

function write {
[ -e $default/.instances ] || printf "" > $default/.instances
if [ $? != 0 ]
then
	printf "Unable to create instances file $default/.instances\nExiting...\n"
	exit 1
fi

printf "\nName your instance: "
read name
printf "Qemu command (ex: qemu-system-x86 -m 2G...) with the drive option omitted\n> "
read com
printf "Full path of the OS drive (specified with -drive file=<path>)\n> "
read drive_path
printf "Any other drive options (ex: if=<interface>, bus=<bus>)[default: \"\"] "
read ext

if [ -n "$name" -a -n "$com" -a -n "$drive_path" ] && awk -F "@@@" '$1 ~ /'$name'/ { exit 1 }' $default/.instances
then
	printf "Is this your final command: $com -drive file=$drive_path,$ext(y/n) "
	read ans
	[ -z $ext ] && ext="none"
	[ "$ans" = "y" ] && printf "$name@@@$com@@@$ext@@@${drive_path}\n" >> $default/.instances || write
else
	printf "A parameter was left blank or the your name is the same as a previously named instance...\nRestarting\n"
	write
fi


}

function create {

exit
}
function delete {

exit
}


function main {
	[ -d $default ] || mkdir -p $default
	if [ $? != 0 ]
	then
		printf "Unable to create main virtualization directory for snapshots $default\nExiting...\n"
		exit 1
	fi

	printf "1) Start an instance as a snapshot (temporary)\n\
2) Write a new instance\n\
2) Create a Snapshot file for an instance\n\
3) Delete a Snapshot file for an instance\n\
> "
	read opt
	case $opt in
		1)
			start
			;;
		2)
			write
			;;
		3)
			create
			;;
		4)
			delete
			;;
		*)
			printf "Option not found\nExiting...\n"
			exit 1
			;;
	esac


}

printf "QLab - QEMU Snapshot manager\n\n"
if qemu-img --version > /dev/null 2>&1
then
	while :
	do
		main
	done
else
	printf "qemu-img not installed\n"
	printf "Make sure you have qemu software\n"
fi

